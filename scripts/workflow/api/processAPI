/**
 * this api should be called by any external entities in order to manipulate process instances
 * and process definitions
 * @module processAPI
 * @param {String} action : the operation to execute
 * @param {Object} actionParams : the parameters expected by the operation (sent as JSON with POST requests)
 */

var util = require("workflow/util");
var log = require("log");
var engine = require("workflow/engine");
var processDefinitionManagement = require("workflow/processDefinitionsManagement");

// initialize engine if needed
engine.init();
try {
  
  var req = util.handleRequest(request);
  if (req.action && req.actionParams) {
    return eval(req.action)(req.actionParams);
  }
}catch(exception) {
  log.error(JSON.stringify(exception));
  return util.processException(exception);
} 

function listProcessDefinitions() {
  
  var processManager = new processDefinitionManagement.ProcessDefinitionManager();
  return processManager.listProcessDefinitions();
}

function getProcessDefinition(processDefinitionId) {

  var processManager = new processDefinitionManagement.ProcessDefinitionManager();
  return processManager.getProcessDefinition(processDefinitionId);
}

function saveProcessDefinition(processDefDto) {
  
  var processManager = new processDefinitionManagement.ProcessDefinitionManager();
  return processManager.saveProcessDefinition(processDefDto);
} 

function startProcess(processParamsDto) {
 
  var processManager = new processDefinitionManagement.ProcessDefinitionManager();
  return processManager.startProcess(processParamsDto);
}
